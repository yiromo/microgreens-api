version: '3.8'

services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.0
  #   container_name: zookeeper
  #   restart: always
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     mgreen-net:
  #       ipv4_address: 192.168.11.4

  # kafka:
  #   image: confluentinc/cp-kafka:7.5.0
  #   container_name: kafka
  #   restart: always
  #   depends_on:
  #     - zookeeper
  #   env_file:
  #     - ./envs/containers.env
  #   ports:
  #     - "9092:9092"
  #   networks:
  #     mgreen-net:
  #       ipv4_address: 192.168.11.5

  # mail:
  #   build:
  #     context: .
  #     dockerfile: ./dockerfiles/mail.dockerfile  
  #   container_name: mail-service
  #   restart: always
  #   volumes:
  #     - ./mail:/app/mail
  #   ports:
  #     - 8882:8030
  #   depends_on:
  #     - kafka
  #   networks:
  #     mgreen-net:
  #       ipv4_address: 192.168.11.6

  database:
    image: postgres:latest
    container_name: mgreen-database
    ports:
      - "5445:5432"
    env_file:
      - ./envs/containers.env
    networks:
      mgreen-net:
        ipv4_address: 192.168.11.5
    volumes:
      - /mgreen/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mgreen-api:
    build:
      context: .
      dockerfile: ./dockerfiles/mgreen.dockerfile
    container_name: mgreen-api
    restart: always
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./mgreen-backend:/app/mgreen-backend
      - ./requirements.txt:/app/mgreen-backend/requirements.txt
    ports:
      - 8010:8000
    networks:
      mgreen-net:
        ipv4_address: 192.168.11.3

  minio:
    image: minio/minio:latest
    container_name: mgreen-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web UI
    env_file:
      - ./envs/containers.env
    networks:
      mgreen-net:
        ipv4_address: 192.168.11.6
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /mgreen/minio_data:/data

networks:
  mgreen-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.11.0/24